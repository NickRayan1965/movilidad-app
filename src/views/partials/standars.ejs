<script>
  async function postData(url = "", data = {}) {
    const res = await fetch(url, {
      method: "POST",
      headers: { 
        "Content-Type": "application/json",
        "Authorization": "Bearer " + localStorage.getItem("token")
      },
      body: JSON.stringify(data)
    });
    if (res.status === 401) {
      localStorage.removeItem("token");   // limpia token
      window.location.href = "/auth/login";    // redirige
      return; // corta la ejecución
    }
    if (res.status === 500) {
      toastr.error("Ocurrió un error en el servidor");
      throw new Error(`Error ${res.status}`);
      return;
    }
    if (!res.ok) throw new Error(`Error ${res.status}`);
    return res.json();
  }
  async function getData(url = "", params = {}) {
    const query = new URLSearchParams(params).toString();
    const fullUrl = query ? `${url}?${query}` : url;

    const res = await fetch(fullUrl, {
      method: "GET",
      headers: { 
        "Content-Type": "application/json",
        "Authorization": "Bearer " + localStorage.getItem("token")
      }
    });
    console.log({res});
    if (res.status === 401) {
      localStorage.removeItem("token");
      window.location.href = "/auth/login";
      return;
    }
    if (res.status === 500) {
      toastr.error("Ocurrió un error en el servidor");
      throw new Error(`Error ${res.status}`);
      return;
    }
    if (!res.ok) throw new Error(`Error ${res.status}`);
    return res.json();
  }

  function warningNotification({title = 'Advertencia', message}) {
    toastr.warning(message, title, {
      closeButton: true,
      progressBar: true,
      positionClass: "toast-top-right",
      timeOut: "5000"
    });
  }
  function normalizeDecimal({
    value,
    decimals,
    defaultValue
  }) {
    try {
      const num = new Decimal(value);
      return num.toFixed(decimals);
    } catch {
      return defaultValue;
    }
  }
  function modal(id) {
    return bootstrap.Modal.getInstance(document.getElementById(id));
  }
  function attachNumericHandlers() {
    // limpiar eventos previos
    $('.numeric').off('.numeric');

    // restringir caracteres permitidos
    $('.numeric').on('input.numeric', function () {
      let val = $(this).val();
      // solo números y un punto
      val = val.replace(/[^0-9.]/g, '');     
      // si hay más de un punto, deja solo el primero
      const parts = val.split('.');
      if (parts.length > 2) {
        val = parts[0] + '.' + parts.slice(1).join('').replace(/\./g, '');
      }
      $(this).val(val);
    });

    // normalizar al salir
    $('.numeric').on('blur.numeric', function () {
      const e = $(this);
      const maxDecimalPlaces = e.attr('max-decimals') ? +e.attr('max-decimals') : 2;
      const defaultOnFail = '';
      const value = e.val();

      e.val(
        normalizeDecimal({
          value,
          decimals: maxDecimalPlaces,
          defaultValue: defaultOnFail
        })
      );
    });
  }

  function attachIntegerHandlers() {
    // limpiar eventos previos
    $('.integer').off('.integer');

    // restringir solo números
    $('.integer').on('input.integer', function () {
      let val = $(this).val();
      val = val.replace(/[^0-9]/g, ''); // elimina todo lo que no sea dígito
      $(this).val(val);
    });
  }


  $(function() {
    $(".modal-dialog").draggable({
      handle: ".modal-header"
    });
    $(document).on('show.bs.modal', function (e) {
      const $dialog = $(e.target).find(".modal-dialog");
      $dialog.css({
        top: "",
        left: "",
        position: ""
      });
    });
    attachNumericHandlers();
    attachIntegerHandlers();
  });
</script>